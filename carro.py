# ============================================================
# üöó OFICINA DE AN√ÅLISE DE DADOS EMPRESARIAL - VENDAS DE CARROS
# ============================================================

# Bibliotecas principais
import pandas as pd
import matplotlib.pyplot as plt

# ------------------------------------------------------------
# 1Ô∏è‚É£ CARREGANDO A BASE
# ------------------------------------------------------------
# Aqui voc√™ deve colocar o nome do arquivo CSV gerado anteriormente
df = pd.read_csv("vendas_carros.csv", encoding="latin1", delimiter=";")

# üîß Ajusta valores num√©ricos
df["VALOR_UNIT"] = df["VALOR_UNIT"].str.replace(",", ".").astype(float)
df["VALOR_TOTAL"] = df["VALOR_TOTAL"].str.replace(",", ".").astype(float)

# Visualiza as primeiras linhas
print("\nüîç Visualizando a base de dados:")
print(df.head())

# ------------------------------------------------------------
# 2Ô∏è‚É£ ENTENDENDO A ESTRUTURA DA BASE
# ------------------------------------------------------------
print("\nüì¶ Informa√ß√µes gerais:")
print(df.info())

print("\nüìä Estat√≠sticas b√°sicas:")
print(df.describe())

print(f"\nüìè Total de linhas: {len(df)} | Total de colunas: {len(df.columns)}")

# ------------------------------------------------------------
# 3Ô∏è‚É£ AJUSTANDO TIPOS DE DADOS
# ------------------------------------------------------------
df["DATA"] = pd.to_datetime(df["DATA"], dayfirst=True, errors="coerce")
df["ANO"] = df["DATA"].dt.year
df["MES"] = df["DATA"].dt.month_name()

# ------------------------------------------------------------
# 4Ô∏è‚É£ AN√ÅLISE GERAL DE VENDAS
# ------------------------------------------------------------
receita_total = df["VALOR_TOTAL"].sum()
qtd_total = df["QTD"].sum()
ticket_medio = receita_total / qtd_total

print("\nüí∞ M√©tricas gerais:")
print(f"Receita total: R$ {receita_total:,.2f}")
print(f"Quantidade total vendida: {qtd_total:,}")
print(f"Ticket m√©dio: R$ {ticket_medio:,.2f}")

# ------------------------------------------------------------
# 5Ô∏è‚É£ AN√ÅLISE ANUAL
# ------------------------------------------------------------
receita_por_ano = df.groupby("ANO")["VALOR_TOTAL"].sum()

print("\nüìÜ Receita total por ano:")
print(receita_por_ano)

receita_por_ano.plot(kind="bar", color="lightblue", edgecolor="black")
plt.title("Receita Total por Ano")
plt.ylabel("Valor em R$")
plt.xlabel("Ano")
plt.grid(axis="y", linestyle="--", alpha=0.5)
plt.show()

# ------------------------------------------------------------
# 6Ô∏è‚É£ EVOLU√á√ÉO MENSAL DA RECEITA
# ------------------------------------------------------------
df["MES_NUM"] = df["DATA"].dt.month
receita_mensal = df.groupby(["ANO", "MES_NUM"])["VALOR_TOTAL"].sum().reset_index()

for ano in receita_mensal["ANO"].unique():
    dados_ano = receita_mensal[receita_mensal["ANO"] == ano]
    plt.plot(dados_ano["MES_NUM"], dados_ano["VALOR_TOTAL"], marker="o", label=str(ano))

plt.title("üìà Evolu√ß√£o Mensal da Receita")
plt.xlabel("M√™s")
plt.ylabel("Receita (R$)")
plt.legend()
plt.grid(True, linestyle="--", alpha=0.5)
plt.show()

# ------------------------------------------------------------
# 7Ô∏è‚É£ AN√ÅLISE POR MODELO DE CARRO
# ------------------------------------------------------------
top_modelos = df.groupby("MODELO")["VALOR_TOTAL"].sum().sort_values(ascending=False).head(10)

print("\nüèÜ Top 10 modelos mais vendidos (por receita):")
print(top_modelos)

top_modelos.plot(kind="bar", color="orange", edgecolor="black")
plt.title("Top 10 Modelos de Carros por Receita")
plt.ylabel("Receita (R$)")
plt.xlabel("Modelo")
plt.xticks(rotation=45, ha="right")
plt.grid(axis="y", linestyle="--", alpha=0.5)
plt.show()

# ------------------------------------------------------------
# 8Ô∏è‚É£ AN√ÅLISE POR MODELO
# ------------------------------------------------------------
modelo_receita = df.groupby("MODELO")["VALOR_TOTAL"].sum().sort_values(ascending=False)

plt.pie(
    modelo_receita,
    labels=modelo_receita.index,
    autopct="%1.1f%%",
    startangle=90,
    colors=["gold", "skyblue", "lightcoral", "lightgreen", "violet", "salmon"]
)
plt.title("Distribui√ß√£o de Receita por Modelo")
plt.show()

# ------------------------------------------------------------
# 9Ô∏è‚É£ AN√ÅLISE POR VENDEDOR
# ------------------------------------------------------------
top_vendedores = df.groupby("VENDEDOR")["VALOR_TOTAL"].sum().sort_values(ascending=False)

plt.bar(top_vendedores.index, top_vendedores.values, color="lightseagreen", edgecolor="black")
plt.title("Receita Total por Vendedor")
plt.ylabel("Valor em R$")
plt.xticks(rotation=45, ha="right")
plt.grid(axis="y", linestyle="--", alpha=0.5)
plt.show()

# ------------------------------------------------------------
# üîü AN√ÅLISE POR CONCESSIONARIA
# ------------------------------------------------------------
top_concessionarias = df.groupby("CONCESSIONARIA")["VALOR_TOTAL"].sum().sort_values(ascending=False)

plt.bar(top_concessionarias.index, top_concessionarias.values, color="mediumpurple", edgecolor="black")
plt.title("Receita Total por Concessionaria")
plt.ylabel("Valor em R$")
plt.xticks(rotation=45, ha="right")
plt.grid(axis="y", linestyle="--", alpha=0.5)
plt.show()

# ------------------------------------------------------------
# 1Ô∏è‚É£1Ô∏è‚É£ TICKET M√âDIO POR MODELO
# ------------------------------------------------------------
ticket_por_modelo = (df.groupby("MODELO")["VALOR_TOTAL"].sum() /
                     df.groupby("MODELO")["QTD"].sum()).sort_values(ascending=False).head(10)

ticket_por_modelo.plot(kind="bar", color="steelblue", edgecolor="black")
plt.title("Ticket M√©dio por Modelo (Top 10)")
plt.ylabel("Ticket M√©dio (R$)")
plt.xlabel("Modelo")
plt.xticks(rotation=45, ha="right")
plt.grid(axis="y", linestyle="--", alpha=0.5)
plt.show()

# ------------------------------------------------------------
# 1Ô∏è‚É£2Ô∏è‚É£ CONCLUS√ïES R√ÅPIDAS
# ------------------------------------------------------------
print("\nüìà Conclus√µes r√°pidas:")
print("- H√° crescimento de receita entre os anos (ver gr√°fico anual).")
print("- Alguns modelos dominam o faturamento total (ver gr√°fico de pizza).")
print("- Os vendedores top representam grande parte das vendas.")
print("- As Concessionarias maiores concentram a maior parte da receita.")
print("- O ticket m√©dio varia bastante entre modelos de carro.")
